<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.dzhai.generator.mapper.GenTableColumnMapper">
  <resultMap id="BaseResultMap" type="com.github.dzhai.generator.model.GenTableColumn">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gen_table_id" jdbcType="INTEGER" property="genTableId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
    <result column="jdbc_type" jdbcType="VARCHAR" property="jdbcType" />
    <result column="mybatis_jdbc_type" jdbcType="VARCHAR" property="mybatisJdbcType" />
    <result column="java_type" jdbcType="VARCHAR" property="javaType" />
    <result column="java_field" jdbcType="VARCHAR" property="javaField" />
    <result column="is_pk" jdbcType="BIT" property="isPk" />
    <result column="is_null" jdbcType="BIT" property="isNull" />
    <result column="is_insert" jdbcType="BIT" property="isInsert" />
    <result column="is_edit" jdbcType="BIT" property="isEdit" />
    <result column="is_list" jdbcType="BIT" property="isList" />
    <result column="is_query" jdbcType="BIT" property="isQuery" />
    <result column="query_type" jdbcType="VARCHAR" property="queryType" />
    <result column="show_type" jdbcType="VARCHAR" property="showType" />
    <result column="dict_type" jdbcType="VARCHAR" property="dictType" />
    <result column="settings" jdbcType="VARCHAR" property="settings" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gen_table_id, name, comments, jdbc_type, mybatis_jdbc_type, java_type, java_field, 
    is_pk, is_null, is_insert, is_edit, is_list, is_query, query_type, show_type, dict_type, 
    settings, sort, remarks, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.github.dzhai.generator.model.GenTableColumnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gen_table_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectOneByExample" parameterType="com.github.dzhai.generator.model.GenTableColumnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gen_table_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1 
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gen_table_column
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gen_table_column
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.dzhai.generator.model.GenTableColumnExample">
    delete from gen_table_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.github.dzhai.generator.model.GenTableColumn" useGeneratedKeys="true">
    insert into gen_table_column (gen_table_id, name, comments, 
      jdbc_type, mybatis_jdbc_type, java_type, 
      java_field, is_pk, is_null, is_insert, 
      is_edit, is_list, is_query, query_type, 
      show_type, dict_type, settings, 
      sort, remarks, del_flag)
    values (#{genTableId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{comments,jdbcType=VARCHAR}, 
      #{jdbcType,jdbcType=VARCHAR}, #{mybatisJdbcType,jdbcType=VARCHAR}, #{javaType,jdbcType=VARCHAR}, 
      #{javaField,jdbcType=VARCHAR}, #{isPk,jdbcType=BIT}, #{isNull,jdbcType=BIT}, #{isInsert,jdbcType=BIT}, 
      #{isEdit,jdbcType=BIT}, #{isList,jdbcType=BIT}, #{isQuery,jdbcType=BIT}, #{queryType,jdbcType=VARCHAR}, 
      #{showType,jdbcType=VARCHAR}, #{dictType,jdbcType=VARCHAR}, #{settings,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.github.dzhai.generator.model.GenTableColumn" useGeneratedKeys="true">
    insert into gen_table_column
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="genTableId != null">
        gen_table_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="comments != null">
        comments,
      </if>
      <if test="jdbcType != null">
        jdbc_type,
      </if>
      <if test="mybatisJdbcType != null">
        mybatis_jdbc_type,
      </if>
      <if test="javaType != null">
        java_type,
      </if>
      <if test="javaField != null">
        java_field,
      </if>
      <if test="isPk != null">
        is_pk,
      </if>
      <if test="isNull != null">
        is_null,
      </if>
      <if test="isInsert != null">
        is_insert,
      </if>
      <if test="isEdit != null">
        is_edit,
      </if>
      <if test="isList != null">
        is_list,
      </if>
      <if test="isQuery != null">
        is_query,
      </if>
      <if test="queryType != null">
        query_type,
      </if>
      <if test="showType != null">
        show_type,
      </if>
      <if test="dictType != null">
        dict_type,
      </if>
      <if test="settings != null">
        settings,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="genTableId != null">
        #{genTableId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
      <if test="jdbcType != null">
        #{jdbcType,jdbcType=VARCHAR},
      </if>
      <if test="mybatisJdbcType != null">
        #{mybatisJdbcType,jdbcType=VARCHAR},
      </if>
      <if test="javaType != null">
        #{javaType,jdbcType=VARCHAR},
      </if>
      <if test="javaField != null">
        #{javaField,jdbcType=VARCHAR},
      </if>
      <if test="isPk != null">
        #{isPk,jdbcType=BIT},
      </if>
      <if test="isNull != null">
        #{isNull,jdbcType=BIT},
      </if>
      <if test="isInsert != null">
        #{isInsert,jdbcType=BIT},
      </if>
      <if test="isEdit != null">
        #{isEdit,jdbcType=BIT},
      </if>
      <if test="isList != null">
        #{isList,jdbcType=BIT},
      </if>
      <if test="isQuery != null">
        #{isQuery,jdbcType=BIT},
      </if>
      <if test="queryType != null">
        #{queryType,jdbcType=VARCHAR},
      </if>
      <if test="showType != null">
        #{showType,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="settings != null">
        #{settings,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.dzhai.generator.model.GenTableColumnExample" resultType="java.lang.Long">
    select count(*) from gen_table_column
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gen_table_column
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.genTableId != null">
        gen_table_id = #{record.genTableId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
      <if test="record.jdbcType != null">
        jdbc_type = #{record.jdbcType,jdbcType=VARCHAR},
      </if>
      <if test="record.mybatisJdbcType != null">
        mybatis_jdbc_type = #{record.mybatisJdbcType,jdbcType=VARCHAR},
      </if>
      <if test="record.javaType != null">
        java_type = #{record.javaType,jdbcType=VARCHAR},
      </if>
      <if test="record.javaField != null">
        java_field = #{record.javaField,jdbcType=VARCHAR},
      </if>
      <if test="record.isPk != null">
        is_pk = #{record.isPk,jdbcType=BIT},
      </if>
      <if test="record.isNull != null">
        is_null = #{record.isNull,jdbcType=BIT},
      </if>
      <if test="record.isInsert != null">
        is_insert = #{record.isInsert,jdbcType=BIT},
      </if>
      <if test="record.isEdit != null">
        is_edit = #{record.isEdit,jdbcType=BIT},
      </if>
      <if test="record.isList != null">
        is_list = #{record.isList,jdbcType=BIT},
      </if>
      <if test="record.isQuery != null">
        is_query = #{record.isQuery,jdbcType=BIT},
      </if>
      <if test="record.queryType != null">
        query_type = #{record.queryType,jdbcType=VARCHAR},
      </if>
      <if test="record.showType != null">
        show_type = #{record.showType,jdbcType=VARCHAR},
      </if>
      <if test="record.dictType != null">
        dict_type = #{record.dictType,jdbcType=VARCHAR},
      </if>
      <if test="record.settings != null">
        settings = #{record.settings,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gen_table_column
    set id = #{record.id,jdbcType=INTEGER},
      gen_table_id = #{record.genTableId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      comments = #{record.comments,jdbcType=VARCHAR},
      jdbc_type = #{record.jdbcType,jdbcType=VARCHAR},
      mybatis_jdbc_type = #{record.mybatisJdbcType,jdbcType=VARCHAR},
      java_type = #{record.javaType,jdbcType=VARCHAR},
      java_field = #{record.javaField,jdbcType=VARCHAR},
      is_pk = #{record.isPk,jdbcType=BIT},
      is_null = #{record.isNull,jdbcType=BIT},
      is_insert = #{record.isInsert,jdbcType=BIT},
      is_edit = #{record.isEdit,jdbcType=BIT},
      is_list = #{record.isList,jdbcType=BIT},
      is_query = #{record.isQuery,jdbcType=BIT},
      query_type = #{record.queryType,jdbcType=VARCHAR},
      show_type = #{record.showType,jdbcType=VARCHAR},
      dict_type = #{record.dictType,jdbcType=VARCHAR},
      settings = #{record.settings,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.dzhai.generator.model.GenTableColumn">
    update gen_table_column
    <set>
      <if test="genTableId != null">
        gen_table_id = #{genTableId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="jdbcType != null">
        jdbc_type = #{jdbcType,jdbcType=VARCHAR},
      </if>
      <if test="mybatisJdbcType != null">
        mybatis_jdbc_type = #{mybatisJdbcType,jdbcType=VARCHAR},
      </if>
      <if test="javaType != null">
        java_type = #{javaType,jdbcType=VARCHAR},
      </if>
      <if test="javaField != null">
        java_field = #{javaField,jdbcType=VARCHAR},
      </if>
      <if test="isPk != null">
        is_pk = #{isPk,jdbcType=BIT},
      </if>
      <if test="isNull != null">
        is_null = #{isNull,jdbcType=BIT},
      </if>
      <if test="isInsert != null">
        is_insert = #{isInsert,jdbcType=BIT},
      </if>
      <if test="isEdit != null">
        is_edit = #{isEdit,jdbcType=BIT},
      </if>
      <if test="isList != null">
        is_list = #{isList,jdbcType=BIT},
      </if>
      <if test="isQuery != null">
        is_query = #{isQuery,jdbcType=BIT},
      </if>
      <if test="queryType != null">
        query_type = #{queryType,jdbcType=VARCHAR},
      </if>
      <if test="showType != null">
        show_type = #{showType,jdbcType=VARCHAR},
      </if>
      <if test="dictType != null">
        dict_type = #{dictType,jdbcType=VARCHAR},
      </if>
      <if test="settings != null">
        settings = #{settings,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.dzhai.generator.model.GenTableColumn">
    update gen_table_column
    set gen_table_id = #{genTableId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      comments = #{comments,jdbcType=VARCHAR},
      jdbc_type = #{jdbcType,jdbcType=VARCHAR},
      mybatis_jdbc_type = #{mybatisJdbcType,jdbcType=VARCHAR},
      java_type = #{javaType,jdbcType=VARCHAR},
      java_field = #{javaField,jdbcType=VARCHAR},
      is_pk = #{isPk,jdbcType=BIT},
      is_null = #{isNull,jdbcType=BIT},
      is_insert = #{isInsert,jdbcType=BIT},
      is_edit = #{isEdit,jdbcType=BIT},
      is_list = #{isList,jdbcType=BIT},
      is_query = #{isQuery,jdbcType=BIT},
      query_type = #{queryType,jdbcType=VARCHAR},
      show_type = #{showType,jdbcType=VARCHAR},
      dict_type = #{dictType,jdbcType=VARCHAR},
      settings = #{settings,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <sql id="MysqlDialectSuffix">
    <if test="limitStart != null and limitEnd != null">
      <![CDATA[ limit #{limitStart} , #{limitEnd} ]]>
    </if>
    <if test="limitStart != null and limitEnd == null">
      <![CDATA[ limit #{limitStart}]]>
    </if>
  </sql>
</mapper>